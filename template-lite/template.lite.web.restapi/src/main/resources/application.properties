### Database Properties
#spring.datasource.url = jdbc:mysql://localhost:3306/users_database?useSSL=false
#spring.datasource.username = root
#spring.datasource.password = root

### Hibernate Properties
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.hibernate.ddl-auto = update

spring.datasource.url=jdbc:postgresql://localhost:5432/template_lite
spring.datasource.username=postgres
spring.datasource.password=admin

spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect
#// changed from 'none' to 'update'. when i run the app, tables are created in pgAdmin
#  none, update, create
#Define if Hibernate can create, delete and create, update, or validate the current Database Schema. Currently, you should set this property to create so Hibernate can handle all Database Schema.
spring.jpa.hibernate.ddl-auto = update
#spring.jpa.database=oracle
spring.jpa.hibernate-sql=true


#// from mysql data source connection
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.show-sql=true


#spring.datasource.max-idle=10
#spring.datasource.max-wait=10000
#spring.datasource.min-idle=5
#spring.datasource.initial-size=5




server.port=8080

app.version=5.1.1


server.error.include-message = always
server.error.include-stacktrace=always
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false